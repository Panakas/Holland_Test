<!DOCTYPE html>
<html lang="el">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Τεστ Επαγγελματικού Προσανατολισμού (Holland)</title>
    <style>
        :root {
            /* Χρώματα πλοήγησης */
            --nav-primary: #4361ee;
            --nav-primary-light: #5a7cff;
            --nav-accent: #4895ef;
            --nav-accent-light: #64b5f6;
            --nav-button-color: #A2A3E9;
            
            /* Χρώματα τύπων προσωπικότητας */
            --realistic: #FF9E80;
            --investigative: #80DEEA;
            --artistic: #CE93D8;
            --social: #81C784;
            --enterprising: #FFD54F;
            --conventional: #A5D6A7;
            
            /* Απαλές εκδοχές */
            --realistic-light: #FFE5DE;
            --investigative-light: #E0F7FA;
            --artistic-light: #F3E5F5;
            --social-light: #E8F5E9;
            --enterprising-light: #FFF8E1;
            --conventional-light: #E8F5E9;
            
            /* Προεπιλεγμένα */
            --primary: var(--realistic);
            --primary-light: var(--realistic-light);
            --secondary: #3a0ca3;
            --option-bg: var(--realistic-light);
            --option-selected: var(--realistic);
            --question-bg: #ffffff;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
        }
        
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #e2e8f0 100%);
            min-height: 100vh;
            padding: 20px;
            color: var(--dark);
            line-height: 1.6;
        }
        
        .container {
            max-width: 650px;
            margin: 20px auto;
            background-color: white;
            border-radius: 15px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            animation: fadeIn 0.6s ease;
        }
        
        .welcome-screen {
            padding: 35px 30px;
            text-align: center;
        }
        
        .welcome-screen h1 {
            color: var(--secondary);
            font-size: 2.2rem;
            margin-bottom: 15px;
            font-weight: 700;
            line-height: 1.3;
        }
        
        .welcome-screen p {
            color: var(--dark);
            font-size: 1.05rem;
            line-height: 1.6;
            margin-bottom: 25px;
            opacity: 0.9;
        }
        
        .welcome-screen .description {
            background-color: var(--light);
            padding: 20px;
            border-radius: 10px;
            margin: 25px 0;
            text-align: left;
            font-size: 1rem;
            border: 1px solid var(--light-gray);
        }
        
        .description ul {
            padding-left: 20px;
            margin-top: 10px;
        }
        
        .description li {
            margin-bottom: 10px;
            position: relative;
        }
        
        .description li::before {
            content: "•";
            color: var(--secondary);
            font-weight: bold;
            display: inline-block;
            width: 1em;
            margin-left: -1em;
        }
        
        .instructions {
            background-color: var(--light);
            padding: 20px;
            border-radius: 10px;
            margin: 25px 0;
            border-left: 4px solid var(--nav-accent);
            text-align: left;
            border: 1px solid var(--light-gray);
        }
        
        .instructions h3 {
            color: var(--secondary);
            margin-bottom: 12px;
            font-size: 1.2rem;
        }
        
        .instructions ol {
            padding-left: 22px;
        }
        
        .instructions li {
            margin-bottom: 10px;
            line-height: 1.5;
        }
        
        .btn {
            background: linear-gradient(135deg, var(--nav-primary), var(--nav-accent));
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 50px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.25);
            display: inline-block;
            margin: 8px;
            font-weight: 600;
            min-width: 140px;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 18px rgba(67, 97, 238, 0.35);
            background: linear-gradient(135deg, var(--nav-primary-light), var(--nav-accent-light));
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        .btn-secondary {
            background: var(--nav-button-color);
            color: white;
            border: none;
        }
        
        .btn-secondary:hover {
            background: color-mix(in srgb, var(--nav-button-color) 80%, white 20%);
        }
        
        .question-container {
            padding: 30px 25px;
            display: none;
        }
        
        .question-box {
            background-color: var(--question-bg);
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 25px;
            border-left: 5px solid var(--primary);
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.03);
        }
        
        .question {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 0;
            color: var(--dark);
            line-height: 1.4;
            text-align: center;
        }
        
        .progress-text {
            text-align: right;
            color: var(--gray);
            font-size: 0.9rem;
            margin-bottom: 5px;
        }
        
        .options {
            display: flex;
            flex-direction: column;
            gap: 12px;
            margin-bottom: 30px;
            max-width: 500px;
            margin-left: auto;
            margin-right: auto;
        }
        
        .option {
            display: flex;
            align-items: center;
            padding: 16px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.2s ease;
            background-color: var(--option-bg);
            position: relative;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            margin-bottom: 8px;
        }

        .option::before {
            content: '';
            position: absolute;
            top: -1px;
            left: -1px;
            right: -1px;
            bottom: -1px;
            border-radius: 8px;
            background: linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0) 50%);
            pointer-events: none;
        }

        .option:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            background-color: color-mix(in srgb, var(--option-bg) 80%, white 20%);
        }

        .option.selected {
            background-color: color-mix(in srgb, var(--option-selected) 15%, white 85%);
            box-shadow: inset 0 1px 3px rgba(0,0,0,0.05), 0 2px 4px rgba(0,0,0,0.05);
        }

        .option.selected::before {
            background: linear-gradient(135deg, rgba(255,255,255,0.7) 0%, rgba(255,255,255,0) 50%);
        }

        .option label {
            font-size: 1rem;
            cursor: pointer;
            flex-grow: 1;
            color: #2c3e50;
            font-weight: 500;
            margin-left: 10px;
        }

        .option input[type="radio"] {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            width: 18px;
            height: 18px;
            border: 2px solid var(--option-selected);
            border-radius: 50%;
            outline: none;
            transition: all 0.2s ease;
            position: relative;
        }

        .option input[type="radio"]:checked {
            background-color: var(--primary);
            border-color: var(--primary);
        }

        .option input[type="radio"]:checked::after {
            content: '';
            position: absolute;
            top: 3px;
            left: 3px;
            width: 8px;
            height: 8px;
            background-color: white;
            border-radius: 50%;
        }
        
        .progress-container {
            width: 100%;
            background-color: #e2e8f0;
            border-radius: 8px;
            margin-bottom: 25px;
            height: 10px;
            overflow: hidden;
        }
        
        .progress-bar {
            height: 100%;
            background: var(--primary);
            border-radius: 8px;
            width: 0%;
            transition: width 0.4s ease;
        }
        
        .navigation-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 25px;
            width: 100%;
            max-width: 500px;
            margin-left: auto;
            margin-right: auto;
            position: relative;
        }

        .nav-button {
            flex: 1;
            padding: 8px 12px;
            min-width: auto;
            font-size: 0.9rem;
            white-space: nowrap;
            max-width: 100px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 5px;
        }

        .home-button {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            width: 40px;
            height: 40px;
            padding: 0;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--nav-button-color);
            color: white;
            border: none;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            transition: all 0.3s;
        }

        .home-button:hover {
            background: color-mix(in srgb, var(--nav-button-color) 80%, white 20%);
            transform: translateX(-50%) translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

        .home-icon {
            width: 20px;
            height: 20px;
            margin: 0;
        }

        .home-icon path {
            stroke: white;
            stroke-width: 2.5px;
        }
        
        .arrow-icon {
            width: 14px;
            height: 14px;
        }
        
        .arrow-icon path {
            stroke: currentColor;
            stroke-width: 3px;
            stroke-linecap: round;
            stroke-linejoin: round;
            fill: none;
        }
        
        .results {
            display: none;
            padding: 30px 25px;
            animation: fadeIn 0.6s ease;
        }
        
        .results h2 {
            color: var(--secondary);
            font-size: 2rem;
            margin-bottom: 25px;
            text-align: center;
        }
        
        .personality-types {
            margin-bottom: 35px;
        }
        
        .personality-type {
            margin-bottom: 30px;
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
            border-left: 4px solid var(--nav-primary);
            border: 1px solid var(--light-gray);
        }
        
        .personality-type h3 {
            color: var(--secondary);
            font-size: 1.3rem;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }
        
        .personality-type h3 .rank {
            font-weight: bold;
            margin-right: 8px;
        }
        
        .personality-type h3 .percentage {
            margin-left: auto;
            font-size: 1rem;
            background-color: var(--light-gray);
            padding: 3px 10px;
            border-radius: 20px;
            color: var(--dark);
        }
        
        .personality-type p {
            color: var(--dark);
            margin-bottom: 12px;
            font-size: 1rem;
            line-height: 1.6;
            opacity: 0.9;
        }
        
        .category-bar-container {
            background-color: #e2e8f0;
            border-radius: 4px;
            height: 10px;
            margin-top: 15px;
            overflow: hidden;
        }
        
        .category-bar {
            height: 100%;
            border-radius: 4px;
            transition: width 1s ease;
        }
        
        .summary-results {
            background-color: var(--light);
            padding: 20px;
            border-radius: 10px;
            border: 1px solid var(--light-gray);
            margin-bottom: 25px;
        }
        
        .summary-results h3 {
            color: var(--secondary);
            margin-bottom: 15px;
            text-align: center;
            font-size: 1.3rem;
        }
        
        .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding-bottom: 10px;
            border-bottom: 1px solid #e2e8f0;
            align-items: center;
        }
        
        .summary-item:last-child {
            border-bottom: none;
        }
        
        .summary-score {
            background-color: var(--primary);
            color: white;
            padding: 4px 10px;
            border-radius: 20px;
            font-size: 0.9rem;
            min-width: 60px;
            text-align: center;
        }
        
        .professions-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 12px;
            margin-top: 18px;
            text-align: center;
        }
        
        .profession {
            background-color: var(--option-bg);
            padding: 10px 15px;
            border-radius: 8px;
            font-size: 0.95rem;
            transition: all 0.2s;
        }
        
        .profession:hover {
            transform: translateY(-2px);
            box-shadow: 0 3px 8px rgba(0,0,0,0.08);
        }
        
        @media (max-width: 600px) {
            .container {
                margin: 10px auto;
                border-radius: 12px;
            }
            
            .welcome-screen {
                padding: 25px 20px;
            }
            
            .welcome-screen h1 {
                font-size: 1.8rem;
            }
            
            .question {
                font-size: 1.1rem;
            }
            
            .option {
                padding: 14px;
            }
            
            .question-box {
                padding: 20px;
            }
            
            .professions-list {
                grid-template-columns: 1fr;
            }
            
            .btn {
                padding: 12px 24px;
                min-width: 140px;
                font-size: 1rem;
            }
            
            .results h2 {
                font-size: 1.8rem;
            }
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .spinner {
            display: none;
            width: 40px;
            height: 40px;
            margin: 20px auto;
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Αρχική Οθόνη -->
        <div class="welcome-screen" id="welcomeScreen">
            <h1>Τεστ Επαγγελματικού Προσανατολισμού (Holland)</h1>
            <p>Ανακαλύψτε τον επαγγελματικό σας προσανατολισμό μέσω του τεστ Holland (RIASEC)</p>
            <div class="description">
                <p>Το Τεστ Holland βασίζεται στη θεωρία RIASEC που διακρίνει 6 βασικούς επαγγελματικούς τύπους:</p>
                <ul>
                    <li><strong>Πραγματικός (R)</strong>: Πρακτικές δραστηριότητες με εργαλεία ή μηχανές</li>
                    <li><strong>Ερευνητικός (I)</strong>: Αναλυτικές εργασίες και έρευνα</li>
                    <li><strong>Καλλιτεχνικός (A)</strong>: Δημιουργικές δραστηριότητες</li>
                    <li><strong>Κοινωνικός (S)</strong>: Βοήθεια και διδασκαλία</li>
                    <li><strong>Επιχειρηματικός (E)</strong>: Ηγεσία και επιχειρηματικότητα</li>
                    <li><strong>Συμβατικός (C)</strong>: Οργανωμένες εργασίες με δεδομένα</li>
                </ul>
            </div>
            
            <div class="instructions">
                <h3>Οδηγίες:</h3>
                <ol>
                    <li>Το τεστ αποτελείται από 48 ερωτήσεις.</li>
                    <li>Για κάθε ερώτηση, επιλέξτε την απάντηση που σας αντιπροσωπεύει καλύτερα.</li>
                    <li>Δεν υπάρχουν σωστές ή λανθασμένες απαντήσεις.</li>
                    <li>Προσπαθήστε να απαντήσετε όσο πιο ειλικρινά μπορείτε.</li>
                    <li>Στο τέλος του τεστ, θα λάβετε μια ανάλυση των επαγγελματικών τύπων που ταιριάζουν περισσότερο με το προφίλ σας.</li>
                </ol>
            </div>
            
            <button class="btn" id="startButton">Έναρξη Τεστ</button>
            <div class="spinner" id="loadingSpinner"></div>
        </div>
        
        <!-- Τεστ -->
        <div class="question-container" id="testContainer">
            <div class="progress-text" id="progressText">Ερώτηση 1 από 48</div>
            <div class="progress-container">
                <div class="progress-bar" id="progressBar"></div>
            </div>
            
            <div class="question-box">
                <div class="question" id="questionText"></div>
            </div>
            
            <div class="options" id="optionsContainer"></div>
            
            <div class="navigation-buttons">
                <button class="btn btn-secondary nav-button" id="prevButton" style="display: none;">
                    <svg class="arrow-icon" viewBox="0 0 24 24">
                        <path d="M15 18L9 12L15 6"/>
                    </svg>
                </button>
                
                <button class="home-button" id="homeButton">
                    <svg class="home-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3 9L12 2L21 9V20C21 20.5304 20.7893 21.0391 20.4142 21.4142C20.0391 21.7893 19.5304 22 19 22H5C4.46957 22 3.96086 21.7893 3.58579 21.4142C3.21071 21.0391 3 20.5304 3 20V9Z"/>
                        <path d="M9 22V12H15V22"/>
                    </svg>
                </button>
                
                <button class="btn btn-secondary nav-button" id="nextButton" disabled>
                    <svg class="arrow-icon" viewBox="0 0 24 24">
                        <path d="M9 18L15 12L9 6"/>
                    </svg>
                </button>
            </div>
        </div>
        
        <!-- Αποτελέσματα -->
        <div class="results" id="resultsContainer">
            <h2>Τα Αποτελέσματά σου</h2>
            <div class="personality-types" id="personalityTypes"></div>
            <div class="summary-results" id="summaryResults"></div>
            <div class="spinner" id="resultsSpinner"></div>
            <button class="btn" id="restartButton">Ξεκινήστε ξανά</button>
        </div>
    </div>

    <script>
        // Κατηγορίες Holland με περισσότερα επαγγέλματα
        const categories = {
            R: { 
                name: "Realistic (Πραγματικός)", 
                score: 0, 
                description: "Προτιμάτε πρακτικές δραστηριότητες με εργαλεία, μηχανές ή φυσικό περιβάλλον. Έχετε πρακτικές δεξιότητες και προτιμάτε να εργάζεστε με αντικείμενα παρά με ανθρώπους ή ιδέες. Οι πραγματικοί τύποι είναι συχνά πρακτικοί, μηχανικοί και ρεαλιστικοί.",
                professions: [
                    "Μηχανικός", "Ηλεκτρολόγος", "Αγρότης", "Αθλητής", "Τεχνικός", 
                    "Οδηγός", "Ξυλουργός", "Συγκολλητής", "Μηχανικός αυτοκινήτων", 
                    "Πιλότος", "Κατασκευαστής", "Επαγγελματίας στρατιώτης", 
                    "Αστυνομικός", "Πυροσβέστης", "Κηπουρός", "Γεωλόγος", 
                    "Αρχιτέκτονας τοπίου", "Κατασκευαστής επίπλων", "Ψαράς",
                    "Τεχνικός HVAC", "Τοπογράφος", "Κατασκευαστής πλοίων"
                ],
                color: "var(--realistic)",
                lightColor: "var(--realistic-light)"
            },
            I: { 
                name: "Investigative (Ερευνητικός)", 
                score: 0, 
                description: "Προτιμάτε αναλυτικές εργασίες, έρευνα και επίλυση προβλημάτων. Έχετε αναλυτικό μυαλό και απολαμβάνετε την παρατήρηση, τη μάθηση και την έρευνα. Οι ερευνητικοί τύποι είναι συχνά αναλυτικοί, διανοητικοί και περίεργοι.",
                professions: [
                    "Επιστήμονας", "Ιατρός", "Προγραμματιστής", "Μαθηματικός", 
                    "Φυσικός", "Χημικός", "Βιολόγος", "Ψυχολόγος", "Φαρμακολόγος", 
                    "Διατροφολόγος", "Νευροεπιστήμονας", "Αστροφυσικός", 
                    "Ερευνητής", "Στατιστικολόγος", "Γεωφυσικός", "Οικονομολόγος", 
                    "Μηχανικός λογισμικού", "Επιδημιολόγος", "Δασολόγος",
                    "Μετεωρολόγος", "Γενετιστής", "Βιοπληροφορικός"
                ],
                color: "var(--investigative)",
                lightColor: "var(--investigative-light)"
            },
            A: { 
                name: "Artistic (Καλλιτεχνικός)", 
                score: 0, 
                description: "Προτιμάτε δημιουργικές δραστηριότητες και αυτοέκφραση. Έχετε φαντασία, διανοητική ευελιξία και απολαμβάνετε τη δημιουργία έργων τέχνης, μουσικής ή γραπτού λόγου. Οι καλλιτεχνικοί τύποι είναι συχνά δημιουργικοί, πρωτότυποι και εκφραστικοί.",
                professions: [
                    "Καλλιτέχνης", "Μουσικός", "Σχεδιαστής", "Συγγραφέας", 
                    "Ηθοποιός", "Σκηνοθέτης", "Φωτογράφος", "Γραφίστας", 
                    "Μοντέρ", "Αρχιτέκτονας", "Μοδίστρα", "Δημοσιογράφος", 
                    "Εικονογράφος", "Χορογράφος", "Συνθέτης", "Διακοσμητής εσωτερικών χώρων", 
                    "Κεραμουργός", "Σκηνογράφος", "Μεταφραστής",
                    "Καλλιτεχνης τατουάζ", "Σχεδιαστής παιχνιδιών", "Σεναριογράφος"
                ],
                color: "var(--artistic)",
                lightColor: "var(--artistic-light)"
            },
            S: { 
                name: "Social (Κοινωνικός)", 
                score: 0, 
                description: "Προτιμάτε να βοηθάτε, να διδάσκετε ή να θεραπεύετε άλλους. Έχετε ανεπτυγμένες κοινωνικές δεξιότητες και απολαμβάνετε να συνεργάζεστε με άλλους και να βοηθάτε στην επίλυση των προβλημάτων τους. Οι κοινωνικοί τύποι είναι συχνά φιλικοί, ευγενικοί και βοηθητικοί.",
                professions: [
                    "Δάσκαλος", "Ψυχολόγος", "Γιατρός", "Κοινωνικός λειτουργός", 
                    "Νοσηλευτής", "Συμβουλευτικός", "Εκπαιδευτικός", "Εργοθεραπευτής", 
                    "Λογοθεραπευτής", "Ιερέας", "Διαιτολόγος", "Επαγγελματίας συμβούλου καριέρας", 
                    "Βιβλιοθηκάριος", "Εκπαιδευτικός αναπτυξιακής ηλικίας", "Εργοθεραπευτής", 
                    "Σύμβουλος γάμου", "Ειδικός εκπαίδευσης", "Υγειονομικός", "Παιδαγωγός",
                    "Επαγγελματίας φροντιστής ηλικιωμένων", "Σύμβουλος σχολικής καθοδήγησης", "Εκπαιδευτής"
                ],
                color: "var(--social)",
                lightColor: "var(--social-light)"
            },
            E: { 
                name: "Enterprising (Επιχειρηματικός)", 
                score: 0, 
                description: "Προτιμάτε ηγετικούς ρόλους, πωλήσεις και επιχειρηματικότητα. Έχετε δεξιότητες πειθούς και ηγεσίας και απολαμβάνετε να πείθετε άλλους και να παίρνετε αποφάσεις. Οι επιχειρηματικοί τύποι είναι συχνά φιλόδοξοι, ενεργητικοί και κοινωνικοί.",
                professions: [
                    "Διευθυντής", "Πωλητής", "Επιχειρηματίας", "Δικηγόρος", 
                    "Πολιτικός", "Δημοσιογράφος", "Σύμβουλος επιχειρήσεων", "Διαφημιστής", 
                    "Διπλωμάτης", "Αντιπρόσωπος πωλήσεων", "Τραπεζίτης", "Ασφαλιστής", 
                    "Διευθυντικός σύμβουλος", "Σύμβουλος επενδύσεων", "Πράκτορας ακινήτων", 
                    "Οργανωτής εκδηλώσεων", "Υπεύθυνος μάρκετινγκ", "Πράκτορας ταξιδίων", "Σύμβουλος διοίκησης",
                    "Διευθυντής προβολής", "Σύμβουλος δημόσιων σχέσεων", "Επαγγελματίας recruiter"
                ],
                color: "var(--enterprising)",
                lightColor: "var(--enterprising-light)"
            },
            C: { 
                name: "Conventional (Συμβατικός)", 
                score: 0, 
                description: "Προτιμάτε οργανωμένες εργασίες με δεδομένα και λεπτομέρεια. Έχετε οργανωτικές και διοικητικές δεξιότητες και απολαμβάνετε να εργάζεστε με δεδομένα και αριθμούς. Οι συμβατικοί τύποι είναι συχνά οργανωμένοι, ακριβείς και μεθοδικοί.",
                professions: [
                    "Λογιστής", "Γραμματέας", "Τραπεζικός υπάλληλος", "Διαχειριστής βάσεων δεδομένων", 
                    "Υπάλληλος γραφείου", "Αναλυτής δεδομένων", "Ταξιδιωτικός πράκτορας", "Αρχειοφύλακας", 
                    "Υπάλληλος εφοδιαστικής αλυσίδας", "Υπάλληλος HR", "Υπάλληλος δημοσίων σχέσεων", 
                    "Υπάλληλος ασφαλιστικής εταιρείας", "Υπάλληλος τηλεφωνικού κέντρου", 
                    "Υπάλληλος διοικητικού γραφείου", "Υπάλληλος στατιστικής υπηρεσίας", 
                    "Υπάλληλος φορολογικού γραφείου", "Υπάλληλος εταιρείας πληροφορικής", 
                    "Υπάλληλος δημοτικών υπηρεσιών", "Υπάλληλος κρατικών υπηρεσιών",
                    "Υπάλληλος απογραφής", "Υπάλληλος τραπεζικών συναλλαγών", "Υπάλληλος ασφάλειας πληροφοριών"
                ],
                color: "var(--conventional)",
                lightColor: "var(--conventional-light)"
            }
        };

        // 48 Ερωτήσεις (8 ανά κατηγορία)
        const questions = [
            // Realistic (R)
            { text: "Απολαμβάνεις να δουλεύεις με εργαλεία ή μηχανήματα;", category: "R" },
            { text: "Θα σου άρεσε να επισκευάζεις ηλεκτρικές συσκευές;", category: "R" },
            { text: "Προτιμάς δραστηριότητες που απαιτούν φυσική δύναμη ή επιδεξιότητα;", category: "R" },
            { text: "Θα σου άρεσε να εργάζεσαι σε εξωτερικούς χώρους (π.χ. γεωργία, κατασκευές);", category: "R" },
            { text: "Απολαμβάνεις να συντηρείς ή να επισκευάζεις οχήματα;", category: "R" },
            { text: "Θα σου άρεσε να εργάζεσαι με ζώα ή φυτά;", category: "R" },
            { text: "Απολαμβάνεις να λύνεις πρακτικά προβλήματα με τα χέρια σου;", category: "R" },
            { text: "Θα σου άρεσε να δουλεύεις σε κατασκευές ή επισκευές;", category: "R" },

            // Investigative (I)
            { text: "Σε ενδιαφέρει να αναλύεις δεδομένα ή να κάνεις έρευνα;", category: "I" },
            { text: "Απολαμβάνεις να λύνεις μαθηματικά προβλήματα;", category: "I" },
            { text: "Σε ενδιαφέρει η μελέτη φυσικών ή βιολογικών φαινομένων;", category: "I" },
            { text: "Θα σου άρεσε να εργάζεσαι σε εργαστήριο;", category: "I" },
            { text: "Απολαμβάνεις να ανακαλύπτεις νέες λύσεις σε τεχνικά προβλήματα;", category: "I" },
            { text: "Σε ενδιαφέρει η ανάλυση πειραματικών δεδομένων;", category: "I" },
            { text: "Απολαμβάνεις να μελετάς επιστημονικά άρθρα ή έρευνες;", category: "I" },
            { text: "Θα σου άρεσε να αναπτύσσεις νέες θεωρίες ή υποθέσεις;", category: "I" },

            // Artistic (A)
            { text: "Απολαμβάνεις να δημιουργείς τέχνη (ζωγραφική, μουσική, γραφή);", category: "A" },
            { text: "Προτιμάς δραστηριότητες που σου επιτρέπουν να εκφραστείς δημιουργικά;", category: "A" },
            { text: "Σε ενδιαφέρει ο σχεδιασμός γραφικών ή έργων τέχνης;", category: "A" },
            { text: "Απολαμβάνεις να παραστίθεσαι μπροστά σε κοινό (θέατρο, μουσική);", category: "A" },
            { text: "Θα σου άρεσε να δουλεύεις σε δημιουργικό περιβάλλον (π.χ. διαφήμιση, μόδα);", category: "A" },
            { text: "Απολαμβάνεις να σχεδιάζεις πρωτότυπα έργα ή ιδέες;", category: "A" },
            { text: "Σε ενδιαφέρει η φωτογραφία ή η κινηματογραφική τέχνη;", category: "A" },
            { text: "Θα σου άρεσε να εργάζεσαι σε ένα μη συμβατικό περιβάλλον;", category: "A" },

            // Social (S)
            { text: "Απολαμβάνεις να βοηθάς άλλους να λύνουν προβλήματα;", category: "S" },
            { text: "Σε ενδιαφέρει να διδάσκεις ή να εκπαιδεύεις άλλους;", category: "S" },
            { text: "Προτιμάς δραστηριότητες που περιλαμβάνουν φροντίδα ατόμων;", category: "S" },
            { text: "Απολαμβάνεις να δουλεύεις σε ομάδες ή να συνεργάζεσαι με πολλούς ανθρώπους;", category: "S" },
            { text: "Θα σου άρεσε να παρέχεις συμβουλευτική ή ψυχολογική υποστήριξη;", category: "S" },
            { text: "Απολαμβάνεις να βοηθάς ανθρώπους με ειδικές ανάγκες;", category: "S" },
            { text: "Σε ενδιαφέρει η εργασία σε κοινωνικές υπηρεσίες;", category: "S" },
            { text: "Θα σου άρεσε να οργανώνεις δραστηριότητες για ομάδες ανθρώπων;", category: "S" },

            // Enterprising (E)
            { text: "Απολαμβάνεις να πείθεις ή να επηρεάζεις άλλους;", category: "E" },
            { text: "Σε ενδιαφέρει η δημιουργία και η διαχείριση μιας επιχείρησης;", category: "E" },
            { text: "Προτιμάς ρόλους με ηγετικές ευθύνες;", category: "E" },
            { text: "Απολαμβάνεις την πώληση προϊόντων ή ιδεών;", category: "E" },
            { text: "Θα σου άρεσε να οργανώνεις εκδηλώσεις ή προγράμματα;", category: "E" },
            { text: "Απολαμβάνεις να διαπραγματεύεσθε συμβόλαια ή συμφωνίες;", category: "E" },
            { text: "Σε ενδιαφέρει η ανάπτυξη επιχειρηματικών σχεδίων;", category: "E" },
            { text: "Θα σου άρεσε να διαχειρίζεσαι έναν οργανισμό ή τμήμα;", category: "E" },

            // Conventional (C)
            { text: "Απολαμβάνεις να δουλεύεις με αριθμούς ή δεδομένα;", category: "C" },
            { text: "Σε ενδιαφέρει η οργάνωση αρχείων ή πληροφοριών;", category: "C" },
            { text: "Προτιμάς εργασίες που απαιτούν ακρίβεια και λεπτομέρεια;", category: "C" },
            { text: "Απολαμβάνεις να ακολουθείς καθιερωμένες διαδικασίες;", category: "C" },
            { text: "Θα σου άρεσε να εργάζεσαι σε γραφείο με οργανωμένο πρόγραμμα;", category: "C" },
            { text: "Απολαμβάνεις να εργάζεσαι με λογιστικά προγράμματα;", category: "C" },
            { text: "Σε ενδιαφέρει η τήρηση καταγραφών και αρχείων;", category: "C" },
            { text: "Θα σου άρεσε να οργανώνεις πληροφορίες σε πίνακες ή βάσεις δεδομένων;", category: "C" }
        ].map((q, index) => ({
            ...q,
            options: [
                { text: "Όχι", value: 1 },
                { text: "Μάλλον Όχι", value: 2 },
                { text: "Δεν ξέρω", value: 3 },
                { text: "Μάλλον Ναι", value: 4 },
                { text: "Ναι", value: 5 }
            ]
        }));

        // Μεταβλητές κατάστασης
        let currentQuestion = 0;
        let answers = [];
        
        // Στοιχεία DOM
        const welcomeScreen = document.getElementById('welcomeScreen');
        const startButton = document.getElementById('startButton');
        const loadingSpinner = document.getElementById('loadingSpinner');
        const questionText = document.getElementById('questionText');
        const progressText = document.getElementById('progressText');
        const optionsContainer = document.getElementById('optionsContainer');
        const nextButton = document.getElementById('nextButton');
        const prevButton = document.getElementById('prevButton');
        const homeButton = document.getElementById('homeButton');
        const progressBar = document.getElementById('progressBar');
        const testContainer = document.getElementById('testContainer');
        const resultsContainer = document.getElementById('resultsContainer');
        const personalityTypes = document.getElementById('personalityTypes');
        const summaryResults = document.getElementById('summaryResults');
        const resultsSpinner = document.getElementById('resultsSpinner');
        const restartButton = document.getElementById('restartButton');
        
        // Αρχικοποίηση
        function initTest() {
            currentQuestion = 0;
            answers = [];
            for (const category in categories) {
                categories[category].score = 0;
            }
            welcomeScreen.style.display = 'none';
            testContainer.style.display = 'block';
            resultsContainer.style.display = 'none';
            updateNavigationButtons();
            loadQuestion();
        }
        
        // Φόρτωση ερώτησης
        function loadQuestion() {
            if (currentQuestion < questions.length) {
                const question = questions[currentQuestion];
                const category = categories[question.category];
                
                // Εφαρμογή χρωμάτων
                document.documentElement.style.setProperty('--primary', category.color);
                document.documentElement.style.setProperty('--option-bg', category.lightColor);
                document.documentElement.style.setProperty('--option-selected', category.color);
                
                questionText.textContent = question.text;
                progressText.textContent = `Ερώτηση ${currentQuestion + 1} από ${questions.length}`;
                optionsContainer.innerHTML = '';
                
                const prevAnswer = answers.find(a => a.questionId === currentQuestion);
                
                question.options.forEach((option, index) => {
                    const optionElement = document.createElement('div');
                    optionElement.className = 'option';
                    if (prevAnswer && prevAnswer.value === option.value) {
                        optionElement.classList.add('selected');
                    }
                    optionElement.innerHTML = `
                        <input type="radio" name="answer" id="option${index}" value="${option.value}" 
                            ${prevAnswer && prevAnswer.value === option.value ? 'checked' : ''}>
                        <label for="option${index}">${option.text}</label>
                    `;
                    
                    const radioInput = optionElement.querySelector('input');
                    radioInput.addEventListener('change', () => {
                        document.querySelectorAll('.option').forEach(opt => {
                            opt.classList.remove('selected');
                        });
                        optionElement.classList.add('selected');
                        
                        saveAnswer();
                        setTimeout(() => {
                            currentQuestion++;
                            if (currentQuestion < questions.length) {
                                loadQuestion();
                                window.scrollTo(0, 0);
                            } else {
                                showResults();
                            }
                        }, 300);
                    });
                    
                    optionElement.addEventListener('click', (e) => {
                        if (e.target.tagName !== 'INPUT') {
                            radioInput.checked = true;
                            radioInput.dispatchEvent(new Event('change'));
                        }
                    });
                    
                    optionsContainer.appendChild(optionElement);
                });
                
                const progressPercent = ((currentQuestion + 1) / questions.length) * 100;
                progressBar.style.width = `${progressPercent}%`;
                
                updateNavigationButtons();
            } else {
                showResults();
            }
        }
        
        function updateNavigationButtons() {
            prevButton.style.display = currentQuestion > 0 ? 'block' : 'none';
            nextButton.disabled = !answers.some(a => a.questionId === currentQuestion);
        }
        
        function saveAnswer() {
            const selectedOption = document.querySelector('input[name="answer"]:checked');
            if (selectedOption) {
                const existingIndex = answers.findIndex(a => a.questionId === currentQuestion);
                const answer = {
                    questionId: currentQuestion,
                    category: questions[currentQuestion].category,
                    value: parseInt(selectedOption.value)
                };
                
                if (existingIndex >= 0) {
                    answers[existingIndex] = answer;
                } else {
                    answers.push(answer);
                }
            }
        }
        
        function showResults() {
            testContainer.style.display = 'none';
            resultsContainer.style.display = 'block';
            personalityTypes.innerHTML = '';
            summaryResults.innerHTML = '';
            resultsSpinner.style.display = 'block';
            
            document.documentElement.style.setProperty('--primary', 'var(--nav-primary)');
            
            setTimeout(() => {
                answers.forEach(answer => {
                    categories[answer.category].score += answer.value;
                });
                
                const sortedCategories = Object.entries(categories)
                    .map(([key, value]) => ({ key, ...value }))
                    .sort((a, b) => b.score - a.score);
                
                sortedCategories.slice(0, 3).forEach((category, index) => {
                    const maxScore = 40;
                    const percentage = Math.round((category.score / maxScore) * 100);
                    
                    const typeElement = document.createElement('div');
                    typeElement.className = 'personality-type';
                    typeElement.innerHTML = `
                        <h3>
                            <span class="rank">${index + 1}.</span> ${category.name}
                            <span class="percentage">${percentage}%</span>
                        </h3>
                        <p>${category.description}</p>
                        <div class="category-bar-container">
                            <div class="category-bar" style="width: ${percentage}%; background: ${category.color}"></div>
                        </div>
                        <h4>Προτεινόμενα επαγγέλματα:</h4>
                        <div class="professions-list">
                            ${category.professions.map(prof => `<div class="profession" style="background-color: ${category.lightColor}">${prof}</div>`).slice(0, 12).join('')}
                        </div>
                    `;
                    personalityTypes.appendChild(typeElement);
                });
                
                const summaryElement = document.createElement('div');
                summaryElement.className = 'summary-results';
                summaryElement.innerHTML = '<h3>Συνοπτικά Αποτελέσματα</h3>';
                
                sortedCategories.forEach(category => {
                    const maxScore = 40;
                    const percentage = Math.round((category.score / maxScore) * 100);
                    const percentageText = `${percentage}%`;
                    
                    const summaryItem = document.createElement('div');
                    summaryItem.className = 'summary-item';
                    summaryItem.innerHTML = `
                        <span><strong>${category.name} (${percentageText})</strong></span>
                        <span class="summary-score" style="background-color: ${category.color}">${category.score}</span>
                    `;
                    summaryElement.appendChild(summaryItem);
                });
                
                summaryResults.appendChild(summaryElement);
                resultsSpinner.style.display = 'none';
                window.scrollTo(0, 0);
            }, 800);
        }
        
        startButton.addEventListener('click', () => {
            startButton.style.display = 'none';
            loadingSpinner.style.display = 'block';
            
            setTimeout(() => {
                initTest();
                loadingSpinner.style.display = 'none';
            }, 800);
        });
        
        nextButton.addEventListener('click', () => {
            saveAnswer();
            currentQuestion++;
            if (currentQuestion < questions.length) {
                loadQuestion();
                window.scrollTo(0, 0);
            } else {
                showResults();
            }
        });
        
        prevButton.addEventListener('click', () => {
            saveAnswer();
            currentQuestion--;
            loadQuestion();
            window.scrollTo(0, 0);
        });
        
        homeButton.addEventListener('click', () => {
            if (confirm("Θέλετε να επιστρέψετε στην αρχική σελίδα; Όλες οι απαντήσεις θα χαθούν.")) {
                welcomeScreen.style.display = 'block';
                testContainer.style.display = 'none';
                resultsContainer.style.display = 'none';
                startButton.style.display = 'inline-block';
            }
        });
        
        restartButton.addEventListener('click', () => {
            if (confirm("Θέλετε να ξεκινήσετε το τεστ από την αρχή; Όλες οι προηγούμενες απαντήσεις θα χαθούν.")) {
                initTest();
            }
        });
        
        document.addEventListener('keydown', (e) => {
            if (testContainer.style.display === 'block') {
                if (e.key === 'ArrowRight' && !nextButton.disabled) {
                    nextButton.click();
                } else if (e.key === 'ArrowLeft' && prevButton.style.display === 'block') {
                    prevButton.click();
                }
            }
        });
    </script>
</body>
</html>
